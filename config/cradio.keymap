// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer numbers definition
#define ALP 0
#define SYM 1
#define NUM 2

// Home row mods macro
#define HRML(k1,k2,k3,k4) &hm LGUI k1  &hm LALT k2  &hm LCTRL k3  &hm LSHIFT k4
#define HRMR(k1,k2,k3,k4) &hm RSHIFT k1  &hm RCTRL k2  &hm RALT k3  &hm LGUI k4 

/ {
    behaviors {
        hm: homerow_mod {
            label = "HOMEROW_MOD";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            bindings = <&kp>, <&kp>;
        };
        hl: homerow_layer {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_LAYER";
			#binding-cells = <2>;
			tapping-term-ms = <220>;
			quick-tap-ms = <250>;
			flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
        };
    	td: tapdance {
			compatible = "zmk,behavior-hold-tap";
			label = "TAPDANCE";
			#binding-cells = <2>;
			tapping-term-ms = <190>;
			quick-tap-ms = <250>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
        skm: sticky_key_modifier {
            label = "STICKY_KEY_MODIFIER";
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
            bindings = <&kp>;
        };
        caps: caps_word_lock {
			compatible = "zmk,behavior-hold-tap";
			label = "CAPS_WORD_LOCK";
			#binding-cells = <2>;
			tapping-term-ms = <190>;
			quick-tap-ms = <250>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&caps_word>;
		};
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮   ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
        //│  Q Å         │  W           │  F           │  P           │  B           │   │  J           │  L           │  U Æ         │  Y Ø         │  ? !         │
            &kp Q          &kp W          &kp F          &kp P          &kp B              &kp J          &kp L          &kp U          &kp Y          &td EXCL QMARK
        //├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
        //│  A LGUI      │  R LALT      │  S LCTRL     │  T LSHIFT    │  G           │   │  M           │  N RSHIFT    │  E RCTRL     │  I RALT      │  O RGUI      │
            HRML(A,        R,             S,             T)             &kp G              &kp M          HRMR(N,        E,             I,             O)
        //├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
        //│  Z           │  X           │  C           │  D           │  V           │   │  K           │  H           │  , ;         │  . :         │  ' "         │
            &kp Z          &kp X          &kp C          &kp D          &kp V              &kp K          &kp H         &td SEMI COMMA  &td COLON DOT  &td DQT SQT
        //╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┴──────────────┴──────────────╯
        //                                             │  SPACE       │  TAB NUM     │   │  ENTER SYM   │  BSPC        │
                                                         &kp SPACE      &hl NUM TAB        &hl SYM ENTER  &kp BSPC
        //                                             ╰──────────────┴──────────────╯   ╰──────────────┴──────────────╯
            >;
        };

        symbols {
            bindings = <
        //╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮   ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
        //│  €           │  #           │  < \leq      │  > \geq      │  @           │   │  ∈ ∉         │  → ⇒        │  ↔ ⇔        │  ⊂ ⊆         │              │
            &kp A          &kp A          &kp A          &kp A          &kp A              &kp A          &kp A          &kp A          &kp A          &kp A
        //├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
        //│  -           │  +           │  ( \left     │  ) \right    │  $ $$        │   │  | ∨         │  / \frac     │  \           │  = \neq      │ * \cdot      │
            &kp A          &kp A          &kp A          &kp A          &kp A              &kp A          &kp A          &kp A          &kp A          &kp A
        //├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
        //│              │              │  { \{        │  } \}        │  ~ ¬         │   │  & ∧         │  [ \[        │  ] \]        │  %           │  ^           │
            &kp A          &kp A          &kp A          &kp A          &kp A              &kp A          &kp A          &kp A          &kp A          &kp A
        //╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┴──────────────┴──────────────╯
        //                                             │  SPACE       │  TAB         │   │  ENTER       │  BSPC        │
                                                         &kp A          &kp A              &kp A          &kp A
        //                                             ╰──────────────┴──────────────╯   ╰──────────────┴──────────────╯
            >;
        };

        numbers {
            bindings = <
        //╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮   ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
        //│              │              │              │              │              │   │              │  7           │  8           │  9           │              │
            &kp A          &kp A          &kp A          &kp A          &kp A              &kp A          &kp A          &kp A          &kp A          &kp A
        //├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
        //│  CAPS        │              │              │              │              │   │  0           │  4           │  5           │  6           │              │
            &caps CAPS 0   &kp A          &kp A          &kp A          &kp A              &kp A          &kp A          &kp A          &kp A          &kp A
        //├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
        //│              │              │              │              │              │   │              │  1           │  2           │  3           │              │
            &kp A          &kp A          &kp A          &kp A          &kp A              &kp A          &kp A          &kp A          &kp A          &kp A
        //╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┴──────────────┴──────────────╯
        //                                             │              │              │   │              │              │
                                                         &kp A          &kp A              &kp A          &kp A
        //                                             ╰──────────────┴──────────────╯   ╰──────────────┴──────────────╯
            >;
        };
    };
};
